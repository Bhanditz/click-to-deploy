actions:
- name: StatefulSet nodes deployed successfully
  bashTest:
    script: |-
      set -x
      function info {
        >&2 echo "${@}"
      }

      function get_desired_number_of_replicas_in_sts {
        kubectl get sts "${STS_NAME}" \
          --namespace "${NAMESPACE}" \
          --output jsonpath='{.spec.replicas}'
      }

      function get_current_number_of_replicas_in_sts {
        kubectl get sts "${STS_NAME}" \
          --namespace "${NAMESPACE}" \
          --output jsonpath='{.status.readyReplicas}'
      }

      function wait_for_healthy_sts {
        info "Waiting for equal desired and current number of replicas"
        while [[ $(get_current_number_of_replicas_in_sts) -ne $(get_desired_number_of_replicas_in_sts) ]]; do
          info "Sleeping 10 seconds before rechecking..."
          sleep 10
        done
        info "Statefulset has equal current and desired number of replicas"
      }
      STS_NAME="${APP_INSTANCE_NAME}-memcached"
      wait_for_healthy_sts
      kubectl get sts "${STS_NAME}" \
        --namespace "${NAMESPACE}" \
        --output jsonpath='{.status.readyReplicas}'
    expect:
      exitCode:
        equals: 0
- name: First node works as expected
  bashTest:
    script: |-
      printf "set bar 0 60 9\r\nsome text\r\nget bar\r\nquit\r\n" | \
        netcat -q 1 $APP_INSTANCE_NAME-memcached-0.$APP_INSTANCE_NAME-memcached-svc.$NAMESPACE.svc.cluster.local 11211
    expect:
      stdout:
        equals: "STORED\r\nVALUE bar 0 9\r\nsome text\r\nEND"
- name: All nodes work as expected
  bashTest:
    script: |-
      for node in $(getent hosts $APP_INSTANCE_NAME-memcached-svc.$NAMESPACE.svc.cluster.local | awk '{print $1}'); do
        printf "set bar 0 60 9\r\nsome text\r\nget bar\r\nquit\r\n" | \
          netcat -q 1 $node 11211
      done
    expect:
      stdout:
        equals: "STORED\r\nVALUE bar 0 9\r\nsome text\r\nEND\r\nSTORED\r\nVALUE bar 0 9\r\nsome text\r\nEND\r\nSTORED\r\nVALUE bar 0 9\r\nsome text\r\nEND"
