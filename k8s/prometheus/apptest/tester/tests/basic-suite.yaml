actions:

- name: Wait 60s to let Prometheus collect metrics
  bashTest:
    script: |-
      sleep 60
    expect:
      exitCode:
        equals: 0

- name: Prometheus UI is available
  bashTest:
    script: |-
      prometheus_ui_url="http://${APP_INSTANCE_NAME}-prometheus:9090/graph"
      curl -s -f "${prometheus_ui_url}"
    expect:
      exitCode:
        equals: 0

- name: Prometheus metrics for its own StatefulSets are available
  bashTest:
    script: |-
      prometheus_api_url="http://${APP_INSTANCE_NAME}-prometheus:9090/api/v1/query"
      query="kube_statefulset_replicas\{app_kubernetes_io_name=\"${APP_INSTANCE_NAME}\"\}"
      metrics_found="$(curl -s "${prometheus_api_url}?query=${query}" \
        | jq '.data.result' | jq length)"
      if [[ "${metrics_found}" -gt 0 ]]; then
        echo "OK - Prometheus StatefulSets metrics found"
      else
        echo "FAIL - no Prometheus StatefulSets metrics found"
      fi
    expect:
      stdout:
        contains: OK - Prometheus StatefulSets metrics found

- name: Log in successfully to Grafana
  bashTest:
    script: |-
      curl -s -f "${GRAFANA_URL}"
    expect:
      exitCode:
        equals: 0

- name: Kubernetes Capacity Planning dashboard is available
  bashTest:
    script: |-
      curl -s "${GRAFANA_SEARCH_API_URL}?type=dash-db&query=Kubernetes%20Capacity%20Planning"
    expect:
      stdout:
        contains: "\"title\":\"Kubernetes Capacity Planning\""

- name: Kubernetes Cluster Health dashboard is available
  bashTest:
    script: |-
      curl -s "${GRAFANA_SEARCH_API_URL}?type=dash-db&query=Kubernetes%20Cluster%20Health"
    expect:
      stdout:
        contains: "\"title\":\"Kubernetes Cluster Health\""

- name: Deployments dashboard is available
  bashTest:
    script: |-
      curl -s "${GRAFANA_SEARCH_API_URL}?type=dash-db&query=Deployments"
    expect:
      stdout:
        contains: "\"title\":\"Deployments\""

- name: K8s / Compute Resources / Cluster dashboard is available
  bashTest:
    script: |-
      curl -s "${GRAFANA_SEARCH_API_URL}?type=dash-db&query=K8s%20/%20Compute%20Resources%20/%20Cluster"
    expect:
      stdout:
        contains: "\"title\":\"K8s / Compute Resources / Cluster\""

- name: K8s / Compute Resources / Namespace dashboard is available
  bashTest:
    script: |-
      curl -s "${GRAFANA_SEARCH_API_URL}?type=dash-db&query=K8s%20/%20Compute%20Resources%20/%20Namespace"
    expect:
      stdout:
        contains: "\"title\":\"K8s / Compute Resources / Namespace\""

- name: K8s / Compute Resources / Pod dashboard is available
  bashTest:
    script: |-
      curl -s "${GRAFANA_SEARCH_API_URL}?type=dash-db&query=K8s%20/%20Compute%20Resources%20/%20Pod"
    expect:
      stdout:
        contains: "\"title\":\"K8s / Compute Resources / Pod\""

- name: K8s / USE Method / Cluster dashboard is available
  bashTest:
    script: |-
      curl -s "${GRAFANA_SEARCH_API_URL}?type=dash-db&query=K8s%20/%20USE%20Method%20/%20Cluster"
    expect:
      stdout:
        contains: "\"title\":\"K8s / USE Method / Cluster\""

- name: K8s / USE Method / Node dashboard is available
  bashTest:
    script: |-
      curl -s "${GRAFANA_SEARCH_API_URL}?type=dash-db&query=K8s%20/%20USE%20Method%20/%20Node"
    expect:
      stdout:
        contains: "\"title\":\"K8s / USE Method / Node\""

- name: KubeDNS dashboard is available
  bashTest:
    script: |-
      curl -s "${GRAFANA_SEARCH_API_URL}?type=dash-db&query=KubeDNS"
    expect:
      stdout:
        contains: "\"title\":\"KubeDNS\""

- name: Kubelet dashboard is available
  bashTest:
    script: |-
      curl -s "${GRAFANA_SEARCH_API_URL}?type=dash-db&query=Kubelet"
    expect:
      stdout:
        contains: "\"title\":\"Kubelet\""

- name: Nodes dashboard is available
  bashTest:
    script: |-
      curl -s "${GRAFANA_SEARCH_API_URL}?type=dash-db&query=Nodes"
    expect:
      stdout:
        contains: "\"title\":\"Nodes\""

- name: Pods dashboard is available
  bashTest:
    script: |-
      curl -s "${GRAFANA_SEARCH_API_URL}?type=dash-db&query=Pods"
    expect:
      stdout:
        contains: "\"title\":\"Pods\""

- name: StatefulSets dashboard is available
  bashTest:
    script: |-
      curl -s "${GRAFANA_SEARCH_API_URL}?type=dash-db&query=StatefulSets"
    expect:
      stdout:
        contains: "\"title\":\"StatefulSets\""