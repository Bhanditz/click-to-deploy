actions:
- name: All nodes are connected to the cluster
  bashTest:
    script: |-
      function get_nodes_count() {
        curl -s "${HEALTH_URL}" | jq '.number_of_nodes'
      }

      expected_nodes="${ELASTICSEARCH_REPLICAS}"

      timeout=30
      timeout_time="$(( $(date +%s) + timeout ))"

      # Wait for all nodes to join the cluster
      while [[ "$(get_nodes_count)" -ne "${expected_nodes}" ]] \
          && [[ "$(date +%s)" -le "${timeout_time}" ]]; do
        sleep 3
      done

      if [[ "$(get_nodes_count)" -eq "${expected_nodes}" ]]; then
        echo "OK - all nodes joined"
      else
        echo "FAIL - nodes count: $(get_nodes_count)"
      fi
    expect:
      stdout:
        contains: OK - all nodes joined

- name: Cluster reports green status
  bashTest:
    script: |-
      function get_cluster_status() {
        curl -s "${HEALTH_URL}" | jq '.status'
      }

      timeout=300
      timeout_time="$(( $(date +%s) + timeout ))"

      # Wait for green status
      while [[ "$(get_cluster_status)" != '"green"' ]] \
          && [[ "$(date +%s)" -le "${timeout_time}" ]]; do
        sleep 3
      done

      if [[ "$(get_cluster_status)" == '"green"' ]]; then
        echo "OK - green status"
      else
        echo "FAIL - status: ${status}"
      fi
    expect:
      stdout:
        contains: OK - green status

- name: GKE logs are found in Elasticsearch
  bashTest:
    script: |-
      function count_logstash_indices() {
        curl -s "${ELASTIC_URL}/_cat/indices" | grep -c 'logstash-'
      }

      timeout=300
      timeout_time="$(( $(date +%s) + timeout ))"

      # Wait for logstash indices being found
      while [[ "$(count_logstash_indices)" -eq 0 ]] \
          && [[ "$(date +%s)" -le "${timeout_time}" ]]; do
        sleep 3
      done

      if [[ "$(count_logstash_indices)" -gt 0 ]]; then
        echo "OK - logstash index found"
      else
        echo "FAIL - no logstash index"
      fi
    expect:
      stdout:
        contains: OK - logstash index found

- name: Kibana UI is available
  bashTest:
    script: |-
      curl -s -f "${KIBANA_URL}/app/kibana"
    expect:
      exitCode:
        equals: 0

- name: Saved searches are found
  bashTest:
    script: |-
      function count_searches() {
        curl -s "${KIBANA_FIND_URL}?type=search" | jq '.total'
      }

      timeout=300
      timeout_time="$(( $(date +%s) + timeout ))"

      while [[ "$(count_searches)" -lt 5 ]] \
          && [[ "$(date +%s)" -le "${timeout_time}" ]]; do
        sleep 3
      done

      if [[ "$(count_searches)" -ge 5 ]]; then
        echo "OK - saved searches found"
      else
        echo "FAIL - no saved searches found"
      fi
    expect:
      stdout:
        contains: OK - saved searches found

- name: Saved search "GKE Apps logs" is found exactly once
  bashTest:
    script: |-
      find_saved_kibana_search_count '"GKE Apps logs"'
    expect:
      stdout:
        contains: OK - "GKE Apps logs" search found once

- name: Saved search "kubelet logs" is found exactly once
  bashTest:
    script: |-
      find_saved_kibana_search_count '"kubelet logs"'
    expect:
      stdout:
        contains: OK - "kubelet logs" search found once

- name: Saved search "kube-proxy logs" is found exactly once
  bashTest:
    script: |-
      find_saved_kibana_search_count '"kube-proxy logs"'
    expect:
      stdout:
        contains: OK - "kube-proxy logs" search found once

- name: Saved search "docker logs" is found exactly once
  bashTest:
    script: |-
      find_saved_kibana_search_count '"docker logs"'
    expect:
      stdout:
        contains: OK - "docker logs" search found once

- name: Saved search "kernel logs" is found exactly once
  bashTest:
    script: |-
      find_saved_kibana_search_count '"kernel logs"'
    expect:
      stdout:
        contains: OK - "kernel logs" search found once

- name: Saved index pattern "logstash-*" is found exactly once
  bashTest:
    script: |-
      find_saved_kibana_index_pattern_count '"logstash-*"'
    expect:
      stdout:
        contains: OK - "logstash-*" index pattern found once
